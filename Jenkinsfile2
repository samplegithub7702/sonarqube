pipeline {
    agent any
    stages {
        stage('Compile and Clean') {
            steps {
                sh "mvn clean compile"
            }
        }
        stage('Build') {
            steps {
                sh "mvn package"
            }
        }
        stage('Snyk Scan') {
            steps {
                withCredentials([string(credentialsId: 'snyk-token', variable: 'SNYK_TOKEN')]) {
                    script {
                        def snykOutput = sh(script: "snyk test --all-projects --all-projects", returnStdout: true)
                        echo snykOutput
                        if (snykOutput.contains('Known')) {
                            currentBuild.result = 'FAILURE'
                            error("Snyk found vulnerabilities")
                        }
                    }
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh "mvn clean verify sonar:sonar " +
                       "-Dsonar.projectKey=new-project " +
                       "-Dsonar.host.url=http://54.183.208.209:9000/ " +
                       "-Dsonar.login=sqp_3862306bc75ded6757ae6fd3deb369f60db37bf3"
                }
            }
        }
    }
}

